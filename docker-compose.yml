version: "3.8"
services:
  db:
    image: bitnami/postgresql
    environment:
      POSTGRESQL_PGAUDIT_LOG: READ,WRITE
      POSTGRESQL_LOG_HOSTNAME: true
      POSTGRESQL_REPLICATION_MODE: master
      POSTGRESQL_REPLICATION_USER: ${PG_REPL_USER}
      POSTGRESQL_REPLICATION_PASSWORD: ${PG_REPL_PASS}
      POSTGRESQL_USERNAME: ${DB_USER_OUT}
      POSTGRESQL_PASSWORD: ${DB_PASSWORD_OUT}
      POSTGRESQL_DATABASE: ${DB_NAME}
    volumes:
      - pgdata:/bitnami/postgresql
      - ./src/docker/db/init:/docker-entrypoint-initdb.d/
    ports:
      - "${DB_PORT_OUT}:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER_OUT} -d ${DB_NAME}" ]
      interval: 3s
      timeout: 5s
      retries: 5
      start_period: 5s
    networks:
      - db_master

  web:
    build: src/docker/web
    volumes:
      - ./src/code/build/libs:${APP_PATH}
      - ./src/code/RestAPI/resources/openapi:${OPEN_API_PATH}
      - ./README.md:/docs/README.md
    env_file:
      - .env
    environment:
      - DB_HOST=${DB_HOST_WEB_1}
      - DB_USER=${DB_USER_WEB_1}
      - DB_PASSWORD=${DB_PASSWORD_WEB_1}
      - JAVA_TOOL_OPTIONS="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005"
    expose:
      - "${PORT}"
      - "5005"
    ports:
      - ${PORT_WEB_1}:${PORT}
      - "5005:5005"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - db_master
      - proxy

  nginx:
    image: byjg/nginx-extras
    volumes:
      - ./src/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./README.md:/docs/README.md
      - ./docs/img/:/docs/img
      - ./src/nginx/static:/static
      - ./src/nginx/log:/var/log/nginx
      - ./src/nginx/ssl:/etc/nginx/ssl
    ports:
      - ${NGINX_PORT_OUT}:${NGINX_PORT}
    networks:
      - proxy
    depends_on:
      db:
        condition: service_healthy
      web:
        condition: service_started

volumes:
  pgdata:
    driver: local
  proxy-cache:

networks:
  db_master:
  proxy: