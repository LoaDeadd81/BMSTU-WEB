events {

}

http {
log_format  proxy_log  '$remote_addr [$time_local] $request_method "$host$request_uri" '
                       '$status $body_bytes_sent "$http_referer" '
                       ' Proxy: "$proxy_host" "$upstream_addr" $uri';

    proxy_cache_path /cache levels=1:2 keys_zone=all:32m max_size=1g;

    gzip on;
    gzip_disable "msie6";
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript image/jpeg;

    upstream app_read {
        server web1:8080 weight=2;
        server web2:8080 weight=1;
        server web3:8080 weight=1;
    }

    upstream app_write {
        server web1:8080;
    }

    upstream app_mirror {
        server web-mirror:8080;
    }

    map $request_method $inst {
        GET app_read;
        default app_write;
    }
    server {
        charset utf-8;

        error_log /var/log/nginx/error.log  debug;
        access_log  /var/log/nginx/access.log proxy_log;

        listen       8080;
        server_name  localhost;

        more_clear_headers Server;
        more_set_headers 'Server: KApp';

        location = /api/v1/ {
            proxy_pass http://app_read/swagger;
        }

        location /swagger {
            proxy_pass http://app_read/swagger/;
        }

        location /api/v1/ {
            proxy_pass http://$inst$uri;
#             proxy_cache all;
#             proxy_cache_min_uses 1;
#             proxy_cache_valid any 1m;
        }

        location /documentation {
            index README.md;
            alias /docs/;
        }

        location /readme {
            proxy_pass http://app_read/readme;
        }


        location /img/ {
            root /img/;
        }

        location / {
            index index.html;
            alias /static/;
        }

        location /admin {
            proxy_set_header X-Script-Name /admin;
            proxy_set_header Host $host;
            proxy_pass http://pgadmin:80/;
            proxy_redirect off;
        }

        location = /status {
            stub_status;
        }

        location = /mirror1/api/v1 {
            proxy_pass http://app_mirror/swagger;
        }

        location /mirror1/swagger/ {
            proxy_pass http://app_mirror/swagger/;
        }

        location /mirror1/api/v1/ {
            set $and "";
            if ($request_method != GET) {
                set $and "1";
            }
            if ($uri !~ ".*[\/auth\/login]\/?$") {
                set $and "${and}1";
            }
            if ($and = "11") {
                return 400 'The mirror only handles get requests';
            }
            proxy_pass http://app_mirror/api/v1/;
        }
    }
}
