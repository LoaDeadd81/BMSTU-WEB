path:
  /recipes:
    post:
      tags:
        - recipe
      summary: Create recipe
      operationId: storeRecipe
      requestBody:
        $ref: "#/components/requestBodies/post"
        required: true
      responses:
        201:
          $ref: "#/components/responses/201"
        500:
          $ref: "status.yml#/components/responses/500"

    get:
      tags:
        - recipe
      summary: Get all recipes
      operationId: indexRecipe
      responses:
        200:
          $ref: "#/components/responses/200Index"
        400:
          $ref: "status.yml#/components/responses/400"
        500:
          $ref: "status.yml#/components/responses/500"


  /recipes/{id}:
    get:
      tags:
        - recipe
      summary: Ger recipe
      operationId: showRecipe
      responses:
        200:
          $ref: "#/components/responses/200Show"
        400:
          $ref: "status.yml#/components/responses/400"
        404:
          $ref: "status.yml#/components/responses/404"
        500:
          $ref: "status.yml#/components/responses/500"

    put:
      tags:
        - recipe
      summary: Update recipe
      operationId: updateRecipe
      requestBody:
        $ref: "#/components/requestBodies/put"
        required: true
      responses:
        204:
          $ref: "status.yml#/components/responses/204"
        400:
          $ref: "status.yml#/components/responses/400"
        404:
          $ref: "status.yml#/components/responses/404"
        500:
          $ref: "status.yml#/components/responses/500"

    delete:
      tags:
        - recipe
      summary: Dlete recipe
      operationId: deleteRecipe
      responses:
        204:
          $ref: "status.yml#/components/responses/204"
        404:
          $ref: "status.yml#/components/responses/404"
        500:
          $ref: "status.yml#/components/responses/500"

    parameters:
      - $ref: "parameters.yml#/components/parameters/id"


  /recipes/{id}/info:
    patch:
      tags:
        - recipe
      summary: Update recipe hat
      operationId: updateRecipeInfo
      requestBody:
        $ref: "#/components/requestBodies/patchInfo"
        required: true
      responses:
        200:
          $ref: "#/components/responses/200Show"
        400:
          $ref: "status.yml#/components/responses/400"
        404:
          $ref: "status.yml#/components/responses/404"
        500:
          $ref: "status.yml#/components/responses/500"

    parameters:
      - $ref: "parameters.yml#/components/parameters/id"

  /recipes/{id}/stages:
    patch:
      tags:
        - recipe
      summary:  Update recipe stages
      operationId: updateRecipeStages
      requestBody:
        $ref: "#/components/requestBodies/patchStages"
        required: true
      responses:
        200:
          $ref: "#/components/responses/200Show"
        400:
          $ref: "status.yml#/components/responses/400"
        404:
          $ref: "status.yml#/components/responses/404"
        500:
          $ref: "status.yml#/components/responses/500"
          
    parameters:
      - $ref: "parameters.yml#/components/parameters/id"

  /recipes/{id}/comments:
    post:
      tags:
        - recipe
      summary:  Add comment to recipe
      operationId: createRecipeComment
      requestBody:
        $ref: "#/components/requestBodies/postComment" 
        required: true
      responses:
        201:
          $ref: "#/components/responses/201Comment"
        204:
          $ref: "status.yml#/components/responses/204"
        400:
          $ref: "status.yml#/components/responses/400"
        404:
          $ref: "status.yml#/components/responses/404"
        500:
          $ref: "status.yml#/components/responses/500"
          
    parameters:
      - $ref: "parameters.yml#/components/parameters/id"

  /recipes/{id}/saved:
    post:
      tags:
        - recipe
      summary:  Save recipe
      operationId: saveRecipe
      responses:
        201:
          $ref: "#/components/responses/201"
        204:
          $ref: "status.yml#/components/responses/204"
        400:
          $ref: "status.yml#/components/responses/400"
        404:
          $ref: "status.yml#/components/responses/404"
        500:
          $ref: "status.yml#/components/responses/500"

    delete:
      tags:
        - recipe
      summary:  Delete recipe from saved
      operationId: deleteSavedRecipe
      responses:
        204:
          $ref: "status.yml#/components/responses/204"
        400:
          $ref: "status.yml#/components/responses/400"
        404:
          $ref: "status.yml#/components/responses/404"
        500:
          $ref: "status.yml#/components/responses/500"
          
    parameters:
      - $ref: "parameters.yml#/components/parameters/id"

  /recipes/{id}/published:
    post:
      tags:
        - recipe
      summary:  Publish recipe
      operationId: publishRecipe
      responses:
        201:
          $ref: "#/components/responses/201"
        204:
          $ref: "status.yml#/components/responses/204"
        400:
          $ref: "status.yml#/components/responses/400"
        404:
          $ref: "status.yml#/components/responses/404"
        500:
          $ref: "status.yml#/components/responses/500"

    delete:
      tags:
        - recipe
      summary:  Cancel publish recipe
      operationId: deletePublishRecipe
      responses:
        204:
          $ref: "status.yml#/components/responses/204"
        400:
          $ref: "status.yml#/components/responses/400"
        404:
          $ref: "status.yml#/components/responses/404"
        500:
          $ref: "status.yml#/components/responses/500"
          
    parameters:
      - $ref: "parameters.yml#/components/parameters/id"



components:
  schemas:
    createRecipe:
      type: object
      properties:
        name:
          type: string
          example: "name"
        description:
          type: string
          example: "description"
        time:
          type: integer
          format: int32
          minimum: 1
          example: 1
        servingsNum:
          type: integer
          format: int32
          minimum: 1
          example: 1
        pfc:
          $ref: "#/components/schemas/pfc"
        stages:
          type: array
          items:
            $ref: "stage.yml#/components/schemas/createStage"

    updateRecipe:
      allOf:
        - $ref: "#/components/schemas/createRecipe"
        - type: object
          properties:
            date:
              type: string
              format: date-time
              example: "2017-07-21 17:32:28"
            published:
              type: boolean
              example: true
            owner_id:
              type: integer
              format: int64
              minimum: 1
              example: 1

    getRecipe:
      type: object
      properties:
        id:
          type: integer
          format: int64
          minimum: 1
          example: 1
        name:
          type: string
          example: "name"
        description:
          type: string
          example: "description"
        time:
          type: integer
          format: int32
          minimum: 1
          example: 1
        servingsNum:
          type: integer
          format: int32
          minimum: 1
          example: 1
        pfc:
          $ref: "#/components/schemas/pfc"
        date:
          type: string
          format: date-time
          example: "2017-07-21 17:32:28"
        published:
          type: boolean
          example: true
        stages:
          type: array
          items:
            $ref: "stage.yml#/components/schemas/getStage"
        comments:
          type: array
          items:
            $ref: "comment.yml#/components/schemas/getComment"
        owner:
          $ref: "user.yml#/components/schemas/getUser"
        ingredients:
          type: array
          items:
            $ref: "ingredient.yml#/components/schemas/getIngredient"
        is_saved:
          type: boolean
          example: true
    
    getRecipeFeed:
      type: object
      properties:
        id:
          type: integer
          format: int64
          minimum: 1
          example: 1
        name:
          type: string
          example: "name"
        description:
          type: string
          example: "description"
        time:
          type: integer
          format: int32
          minimum: 1
          example: 1
        servingsNum:
          type: integer
          format: int32
          minimum: 1
          example: 1
        pfc:
          $ref: "#/components/schemas/pfc"
        date:
          type: string
          format: date-time
          example: "2017-07-21 17:32:28"

    updateRecipeInfo:
      type: object
      properties:
        name:
          type: string
          example: "name"
        description:
          type: string
          example: "description"
        time:
          type: integer
          format: int32
          minimum: 1
          example: 1
        servingsNum:
          type: integer
          format: int32
          minimum: 1
          example: 1
        pfc:
          $ref: "#/components/schemas/pfc"
    
    updateRecipeStages:
      type: object
      properties:
        stages:
          type: array
          items:
            $ref: "stage.yml#/components/schemas/createStage"

    pfc:
      type: object
      properties:
        protein:
          type: integer
          format: int32
          minimum: 1
          example: 1
        fat:
          type: integer
          format: int32
          minimum: 1
          example: 1
        carbon:
          type: integer
          format: int32
          minimum: 1
          example: 1
    

  requestBodies:
    post:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/createRecipe"

    put:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/updateRecipe"

    patchInfo:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/updateRecipeInfo"

    patchStages:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/updateRecipeStages"

    postComment:
      content:
        application/json:
          schema:
            $ref: "comment.yml#/components/schemas/createComment"


  responses:
    200Index:
      description: Successful operation
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/getRecipe"

    200Show:
      description: Successful operation
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/getRecipe"

    201:
      description: Successful operation
      headers:
        Location:
          description: URI of created user
          schema:
            type: string
            format: URI
            example: http://localhost:8080/api/v1/recipe/1
    
    201Comment:
      description: Successful operation
      headers:
        Location:
          description: URI of created user
          schema:
            type: string
            format: URI
            example: http://localhost:8080/api/v1/comments/1